import 'package:json_annotation/json_annotation.dart';

part 'digital_growth_charts_api_response.g.dart'; // this file is generated by flutter pub run build_runner build

@JsonSerializable()
class GrowthDataResponse {
  @JsonKey(name: 'birth_data')
  final BirthData? birthData;
  @JsonKey(name: 'measurement_dates')
  final MeasurementDates? measurementDates;
  @JsonKey(name: 'child_observation_value')
  final ChildObservationValue? childObservationValue;
  @JsonKey(name: 'measurement_calculated_values')
  final MeasurementCalculatedValues? measurementCalculatedValues;
  @JsonKey(name: 'plottable_data')
  final PlottableData? plottableData;
  @JsonKey(name: 'bone_age')
  final BoneAge? boneAge;
  @JsonKey(name: 'events_data')
  final EventsData? eventsData;

  GrowthDataResponse({
    this.birthData,
    this.measurementDates,
    this.childObservationValue,
    this.measurementCalculatedValues,
    this.plottableData,
    this.boneAge,
    this.eventsData,
  });

  factory GrowthDataResponse.fromJson(Map<String, dynamic> json) =>
      _$GrowthDataResponseFromJson(json);

  Map<String, dynamic> toJson() => _$GrowthDataResponseToJson(this);
}

@JsonSerializable()
class BirthData {
  @JsonKey(name: 'birth_date')
  final String? birthDate;
  @JsonKey(name: 'gestation_weeks')
  final int? gestationWeeks;
  @JsonKey(name: 'gestation_days')
  final int? gestationDays;
  @JsonKey(name: 'estimated_date_delivery')
  final String? estimatedDateDelivery;
  @JsonKey(name: 'estimated_date_delivery_string')
  final String? estimatedDateDeliveryString;
  @JsonKey(name: 'sex')
  final String? sex;

  BirthData({
    this.birthDate,
    this.gestationWeeks,
    this.gestationDays,
    this.estimatedDateDelivery,
    this.estimatedDateDeliveryString,
    this.sex,
  });

  factory BirthData.fromJson(Map<String, dynamic> json) =>
      _$BirthDataFromJson(json);

  Map<String, dynamic> toJson() => _$BirthDataToJson(this);
}

@JsonSerializable()
class MeasurementDates {
  @JsonKey(name: 'observation_date')
  final String? observationDate;
  @JsonKey(name: 'chronological_decimal_age')
  final double? chronologicalDecimalAge;
  @JsonKey(name: 'corrected_decimal_age')
  final double? correctedDecimalAge;
  @JsonKey(name: 'chronological_calendar_age')
  final String? chronologicalCalendarAge;
  @JsonKey(name: 'corrected_calendar_age')
  final String? correctedCalendarAge;
  @JsonKey(name: 'corrected_gestational_age')
  final CorrectedGestationalAge? correctedGestationalAge;
  @JsonKey(name: 'comments')
  final Comments? comments;
  @JsonKey(name: 'corrected_decimal_age_error')
  final String? correctedDecimalAgeError;
  @JsonKey(name: 'chronological_decimal_age_error')
  final String? chronologicalDecimalAgeError;

  MeasurementDates({
    this.observationDate,
    this.chronologicalDecimalAge,
    this.correctedDecimalAge,
    this.chronologicalCalendarAge,
    this.correctedCalendarAge,
    this.correctedGestationalAge,
    this.comments,
    this.correctedDecimalAgeError,
    this.chronologicalDecimalAgeError,
  });

  factory MeasurementDates.fromJson(Map<String, dynamic> json) =>
      _$MeasurementDatesFromJson(json);

  Map<String, dynamic> toJson() => _$MeasurementDatesToJson(this);
}

@JsonSerializable()
class CorrectedGestationalAge {
  @JsonKey(name: 'corrected_gestation_weeks')
  final int? correctedGestationWeeks;
  @JsonKey(name: 'corrected_gestation_days')
  final int? correctedGestationDays;

  CorrectedGestationalAge({
    this.correctedGestationWeeks,
    this.correctedGestationDays,
  });

  factory CorrectedGestationalAge.fromJson(Map<String, dynamic> json) =>
      _$CorrectedGestationalAgeFromJson(json);

  Map<String, dynamic> toJson() => _$CorrectedGestationalAgeToJson(this);
}

@JsonSerializable()
class Comments {
  @JsonKey(name: 'clinician_corrected_decimal_age_comment')
  final String? clinicianCorrectedDecimalAgeComment;
  @JsonKey(name: 'lay_corrected_decimal_age_comment')
  final String? layCorrectedDecimalAgeComment;
  @JsonKey(name: 'clinician_chronological_decimal_age_comment')
  final String? clinicianChronologicalDecimalAgeComment;
  @JsonKey(name: 'lay_chronological_decimal_age_comment')
  final String? layChronologicalDecimalAgeComment;

  Comments({
    this.clinicianCorrectedDecimalAgeComment,
    this.layCorrectedDecimalAgeComment,
    this.clinicianChronologicalDecimalAgeComment,
    this.layChronologicalDecimalAgeComment,
  });

  factory Comments.fromJson(Map<String, dynamic> json) => _$CommentsFromJson(json);

  Map<String, dynamic> toJson() => _$CommentsToJson(this);
}

@JsonSerializable()
class ChildObservationValue {
  @JsonKey(name: 'measurement_method')
  final String? measurementMethod;
  @JsonKey(name: 'observation_value')
  final double? observationValue;
  @JsonKey(name: 'observation_value_error')
  final String? observationValueError;

  ChildObservationValue({
    this.measurementMethod,
    this.observationValue,
    this.observationValueError,
  });

  factory ChildObservationValue.fromJson(Map<String, dynamic> json) =>
      _$ChildObservationValueFromJson(json);

  Map<String, dynamic> toJson() => _$ChildObservationValueToJson(this);
}

@JsonSerializable()
class MeasurementCalculatedValues {
  @JsonKey(name: 'corrected_sds')
  final double? correctedSds;
  @JsonKey(name: 'corrected_centile')
  final double? correctedCentile;
  @JsonKey(name: 'corrected_centile_band')
  final String? correctedCentileBand;
  @JsonKey(name: 'chronological_sds')
  final double? chronologicalSds;
  @JsonKey(name: 'chronological_centile')
  final double? chronologicalCentile;
  @JsonKey(name: 'chronological_centile_band')
  final String? chronologicalCentileBand;
  @JsonKey(name: 'corrected_measurement_error')
  final String? correctedMeasurementError;
  @JsonKey(name: 'chronological_measurement_error')
  final String? chronologicalMeasurementError;
  @JsonKey(name: 'corrected_percentage_median_bmi')
  final double? correctedPercentageMedianBmi;
  @JsonKey(name: 'chronological_percentage_median_bmi')
  final double? chronologicalPercentageMedianBmi;

  MeasurementCalculatedValues({
    this.correctedSds,
    this.correctedCentile,
    this.correctedCentileBand,
    this.chronologicalSds,
    this.chronologicalCentile,
    this.chronologicalCentileBand,
    this.correctedMeasurementError,
    this.chronologicalMeasurementError,
    this.correctedPercentageMedianBmi,
    this.chronologicalPercentageMedianBmi,
  });

  factory MeasurementCalculatedValues.fromJson(Map<String, dynamic> json) =>
      _$MeasurementCalculatedValuesFromJson(json);

  Map<String, dynamic> toJson() => _$MeasurementCalculatedValuesToJson(this);
}

@JsonSerializable()
class PlottableData {
  @JsonKey(name: 'centile_data')
  final CentileData? centileData;
  @JsonKey(name: 'sds_data')
  final SdsData? sdsData;

  PlottableData({
    this.centileData,
    this.sdsData,
  });

  factory PlottableData.fromJson(Map<String, dynamic> json) =>
      _$PlottableDataFromJson(json);

  Map<String, dynamic> toJson() => _$PlottableDataToJson(this);
}

@JsonSerializable()
class CentileData {
  @JsonKey(name: 'chronological_decimal_age_data')
  final PlottableDataEntry? chronologicalDecimalAgeData;
  @JsonKey(name: 'corrected_decimal_age_data')
  final PlottableDataEntry? correctedDecimalAgeData;

  CentileData({
    this.chronologicalDecimalAgeData,
    this.correctedDecimalAgeData,
  });

  factory CentileData.fromJson(Map<String, dynamic> json) =>
      _$CentileDataFromJson(json);

  Map<String, dynamic> toJson() => _$CentileDataToJson(this);
}

@JsonSerializable()
class SdsData {
  @JsonKey(name: 'chronological_decimal_age_data')
  final PlottableDataEntry? chronologicalDecimalAgeData;
  @JsonKey(name: 'corrected_decimal_age_data')
  final PlottableDataEntry? correctedDecimalAgeData;

  SdsData({
    this.chronologicalDecimalAgeData,
    this.correctedDecimalAgeData,
  });

  factory SdsData.fromJson(Map<String, dynamic> json) =>
      _$SdsDataFromJson(json);

  Map<String, dynamic> toJson() => _$SdsDataToJson(this);
}

@JsonSerializable()
class PlottableDataEntry {
  @JsonKey(name: 'x')
  final double? x;
  @JsonKey(name: 'y')
  final double? y;
  @JsonKey(name: 'b')
  final double? b;
  @JsonKey(name: 'centile')
  final double? centile;
  @JsonKey(name: 'sds')
  final double? sds;
  @JsonKey(name: 'bone_age_label')
  final String? boneAgeLabel;
  @JsonKey(name: 'events_text')
  final String? eventsText;
  @JsonKey(name: 'bone_age_type')
  final String? boneAgeType;
  @JsonKey(name: 'bone_age_sds')
  final double? boneAgeSds;
  @JsonKey(name: 'bone_age_centile')
  final double? boneAgeCentile;
  @JsonKey(name: 'observation_error')
  final String? observationError;
  @JsonKey(name: 'age_type')
  final String? ageType;
  @JsonKey(name: 'calendar_age')
  final String? calendarAge;
  @JsonKey(name: 'corrected_gestational_age')
  final String? correctedGestationalAge;
  @JsonKey(name: 'lay_comment')
  final String? layComment;
  @JsonKey(name: 'clinician_comment')
  final String? clinicianComment;
  @JsonKey(name: 'age_error')
  final String? ageError;
  @JsonKey(name: 'centile_band')
  final String? centileBand;
  @JsonKey(name: 'observation_value_error')
  final String? observationValueError;

  PlottableDataEntry({
    this.x,
    this.y,
    this.b,
    this.centile,
    this.sds,
    this.boneAgeLabel,
    this.eventsText,
    this.boneAgeType,
    this.boneAgeSds,
    this.boneAgeCentile,
    this.observationError,
    this.ageType,
    this.calendarAge,
    this.correctedGestationalAge,
    this.layComment,
    this.clinicianComment,
    this.ageError,
    this.centileBand,
    this.observationValueError,
  });

  factory PlottableDataEntry.fromJson(Map<String, dynamic> json) =>
      _$PlottableDataEntryFromJson(json);

  Map<String, dynamic> toJson() => _$PlottableDataEntryToJson(this);
}

@JsonSerializable()
class BoneAge {
  @JsonKey(name: 'bone_age')
  final double? boneAge;
  @JsonKey(name: 'bone_age_type')
  final String? boneAgeType;
  @JsonKey(name: 'bone_age_sds')
  final double? boneAgeSds;
  @JsonKey(name: 'bone_age_centile')
  final double? boneAgeCentile;
  @JsonKey(name: 'bone_age_text')
  final String? boneAgeText;

  BoneAge({
    this.boneAge,
    this.boneAgeType,
    this.boneAgeSds,
    this.boneAgeCentile,
    this.boneAgeText,
  });

  factory BoneAge.fromJson(Map<String, dynamic> json) =>
      _$BoneAgeFromJson(json);

  Map<String, dynamic> toJson() => _$BoneAgeToJson(this);
}

@JsonSerializable()
class EventsData {
  @JsonKey(name: 'events_text')
  final String? eventsText;

  EventsData({
    this.eventsText,
  });

  factory EventsData.fromJson(Map<String, dynamic> json) =>
      _$EventsDataFromJson(json);

  Map<String, dynamic> toJson() => _$EventsDataToJson(this);
}